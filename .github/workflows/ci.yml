name: CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Test
    runs-on: ubuntu-latest
    env:
      DJANGO_SECRET_KEY: 'dummy'
      DATABASE_URL: postgres://postgres:postgres@localhost/ci_test
      PGPASSWORD: postgres
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - run: git config --global core.autocrlf input
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
      - name: Install Python 3.13
        run: uv python install 3.13

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - run: uv sync
      - run: uv run ruff check pylinks
      - run: uv run python manage.py collectstatic --noinput
      - run: psql -c 'CREATE DATABASE ci_test;' -h 127.0.0.1 -U postgres
      - run: uv run python manage.py test
