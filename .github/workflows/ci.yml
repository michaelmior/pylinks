name: CI
on: [push, pull_request]
jobs:
  pre_job:
    name: Check duplicate
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@12aca0a884f6137d619d6a8a09fcc3406ced5281
        with:
          cancel_others: true
          concurrent_skipping: same_content
          do_not_skip: '["pull_request", "schedule", "workflow_dispatch"]'

  build:
    name: Test
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    env:
      DJANGO_SECRET_KEY: 'dummy'
      DATABASE_URL: postgres://postgres:postgres@localhost/ci_test
      PGPASSWORD: postgres
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - run: git config --global core.autocrlf input
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pipenv'
      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - run: pipenv install --dev
      - run: pipenv run ruff check pylinks
      - run: pipenv run python manage.py collectstatic --noinput
      - run: psql -c 'CREATE DATABASE ci_test;' -h 127.0.0.1 -U postgres
      - run: pipenv run python manage.py test
